---
title: "PneumoCocoon - Statistical Analysis Plan v1.0"
author: "Vester Gunsaru, Marc Henrion"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-depth: 3
    fig-width: 8
    fig-height: 6
execute:
  echo: true
  warning: false
  error: false
  message: false
bibliography: PneumoCoc_SAP.json
---

```{r setup}
#| include: false

library(tidyverse)
library(kableExtra)
library(knitr)
library(grid)
library(gridExtra)
library(table1)
library(logbin)
library(car)
library(RColorBrewer)
```

# Full title

A pneumococcal conjugate vaccine (PCV) probe study to define the role of under-fives in within-household transmission of Streptococcus pneumoniae to infants in Blantyre District, Malawi.

# SAP Version History

```{r}
#| label: tbl-versionHistory
#| tbl-cap: Version history listing major changes for each new version.

dfVersion<-data.frame(matrix(ncol=3,nrow=0, dimnames=list(NULL, c("Version", "Date", "Description"))))

dfVersion[nrow(dfVersion)+1,]<-c("v1.0","2025-02-03","Updated SAP version to v1.0")
dfVersion[nrow(dfVersion)+1,]<-c("v0.11","2024-09-24","Updated protocol and SAP versions")
dfVersion[nrow(dfVersion)+1,]<-c("v0.10","2024-08-13","Added secondary analyses on VT shedding prevalence among children, mothers and infants; updated figure list")
dfVersion[nrow(dfVersion)+1,]<-c("v0.9","2024-08-02","Revised CONSORT diagram; added Ndirande as a third facility site; updated predictor variables; updated transmission variables; added secondary analyses on VT carriage models for mothers and household contacts; updated figure and table lists")
dfVersion[nrow(dfVersion)+1,]<-c("v0.8","2024-07-03","Added model equation, null and alternative hypothesis; updated figure and table lists; added figures for VT carriage proportions")
dfVersion[nrow(dfVersion)+1,]<-c("v0.7","2024-06-13","Simulated genotype and transmission data; updated carriage visit simulated data for infants, mothers and household contacts; updated Patient characteristics table; added caracteristics table for household contacts;added model diagnostic for primary analysis; updated model diagnostics for the logistic regression model; updated output table for the regression models; changed the carriage visit number for the primary analysis; added number of household contacts as a predictor in the regression models; added secondary analyses; updated abbreviations list; updated figure and table lists")
dfVersion[nrow(dfVersion)+1,]<-c("v0.6","2024-05-10","Added logistic regression model diagnostics;updated figure and table lists")
dfVersion[nrow(dfVersion)+1,]<-c("v0.5","2024-04-30","Revised CONSORT diagram; updated participants characteristics table; added logistic regression to the primary analysis; added descriptive analysis for the primary objective;updated figure and table lists")
dfVersion[nrow(dfVersion)+1,]<-c("v0.4","2024-04-25","Revised to 2 sites randomisation list; accounting for sites in analysis; simulating more than one under 5 household contact per household; populated figure and table lists")
dfVersion[nrow(dfVersion)+1,]<-c("v0.3","2024-04-02","Version history added; other small changes")
dfVersion[nrow(dfVersion)+1,]<-c("v0.2","2024-03-18","Protocol summary and sample size calculation added; data simulation code written. CONSORT diagram added. Primary analysis added")
dfVersion[nrow(dfVersion)+1,]<-c("v0.1","2023-12-15","First draft of the SAP; largely just a skeleton with all sections in place.")

dfVersion %>%
  kable() %>%
  kable_styling(full_width = FALSE)
```

# Trial registry

International Standard Randomised Controlled Trial Number **ISRCTN 10912262**.

# Protocol version

This Statistical Analysis Plan (SAP) v1.0 is based on Protocol v5.0, dated 5 March 2024.

# List of abbreviations

@tbl-abbr lists all abbreviations used throughout this document.

```{r abbr}
#| echo: false
#| label: tbl-abbr
#| tbl-cap: "List of abbreviations"

dfAbbr<-data.frame(
  abbr=c("PCV","PCV13","CRF","AE","AR","SAE","SAR","SUSAR", "VT", "SAP", "RCT", "CI", "SD", "IQR"),
  details=c("Pneumococcal conjugate vaccine","13-valent pneumococcal conjugate vaccine","Case report form","Adverse event","Adverse reaction","Serious adverse event","Serious adverse reaction","Suspected unexpected serious adverse reaction", "Vaccine type", "Statistical analysis plan", "Randomized controlled trial", "Confidence interval", "Standard deviation", "Interquartile range")
)

dfAbbr <- dfAbbr[order(dfAbbr$abbr),] 

dfAbbr %>% 
  kable(row.names=F,col.names=c("Abbreviation","Explanation")) %>%
  kable_styling(full_width=FALSE)
```

# Protocol summary

This SAP focuses on the analytical approach of pneumococcal vaccine genotype (VT) carriage among unvaccinated infants, VT shedding patterns within households and the factors that impact this.

## Study design

A prospective observer-blinded two-arm randomized controlled trial (RCT) testing a 13-valent pneumococcal conjugate vaccine (PCV13)-cocooning strategy targeting children 12-59 months old. The control vaccine with be a pentavalent vaccine.

## Study Endpoints

**Primary endpoint:** The impact of the PCV13-cocooning intervention on residual VT carriage prevalence among unvaccinated 6-week-old infants comparing study arms, estimated by prevalence risk ratio \[95% confidence interval (CI)\].

**Secondary endpoints:** The impact of the PCV13-cocooning intervention comparing study arms on: -

• Fraction of VT carriage among 6-week-old infants attributed to transmission from children 12- 59 months old

• Frequency of within-household VT transmission events at each study visit

• VT carriage prevalence among mothers and children 12-59 months old at each study visit

• VT carriage prevalence among unvaccinated 1- and 4-week-old infants and vaccinated 5- and 9-month-old infants

• VT shedding prevalence among children 12-59 months old, mothers and infants at each study visit.

**Exploratory endpoint**: Cost effectiveness of a single PVC13 booster dose.

## Sample size

The sample size target is 392 households per arm with an anticipated 10% combined loss to follow up, still births and deaths to achieve 356 evaluable households per study arm. We anticipated a 50% reduction in residual VT carriage prevalence from an estimated baseline carriage prevalence of 12% among unvaccinated 6-weekold infants without PCV13-cocooning.

### Assumptions

-   Under-fives are the likely primary source of VT transmission to infants within households.
-   PCV vaccination of under-fives significantly reduces VT carriage and acquisition among unvaccinated adults and children living within the same household.
-   A PCV booster for under-fives following a 3-dose primary series reduces VT carriage by a further 50% compared to vaccinated children that do not receive a booster dose.

### Calculation

This sample size was calculated using a 5% two-sided type 1 error-rate and 80% power.

## Objectives

*Main objective*

• Determine whether and by how much a PCV13-cocooning strategy targeting under-fives reduces residual VT carriage prevalence among unvaccinated 6-week-old infants

• Determine the extent to which a PCV13-cocooning strategy reduces the transmission of VTs to unvaccinated infants within a household

*Secondary objectives*

• Investigate the role of under-fives in pneumococcal shedding within households and the impact of the PCV13-cocooning strategy on VT shedding patterns

*Exploratory objective*

• Investigate the cost-effectiveness of this PCV13-cocooning strategy involving a single PCV-booster dose administered to children 12-59 months old

# Data simulation

In order to demonstrate the planned analyses and show computer code, we will simulate data like the one expected to be generated by the study.

We start by reading dummy randomisation lists that we generated when the randomisation computer code was tested.

```{r randomcode}

#load randomization list
simDatMa<-read.csv("PneumoCocoon_randList_Malabada_20240801.csv") %>%
  dplyr::mutate(facility="Malabada")
simDatMd<-read.csv("PneumoCocoon_randList_Mdeka_20240801.csv")%>%
  dplyr::mutate(facility="Mdeka")
simDatNd<-read.csv("PneumoCocoon_randList_Ndirande_20240801.csv")%>%
  dplyr::mutate(facility="Ndirande")

simDat<-bind_rows(simDatMa,simDatMd, simDatNd) %>%
  dplyr::mutate(facility=factor(facility))

simDat$VaccName<-factor(simDat$VaccName,levels=c("Pentavalent","PCV-13"))

#create household id
simDat<-simDat %>%
  dplyr::mutate(
    hid=paste(sep="","PNEUMO",formatC(1:nrow(simDat), width = 4, format = "d", flag = "0"))
  )
```

We then simulate VT carriage by study arm for the infants. As per sample size calculation, we assume 12% and 6% residual VT carriage in the control and intervention arm respectively.

```{r simulation}
#| warning: false
#set seed for reproducibility
set.seed(123)


#Under5 data
probsPoisScaled<-dpois(1:20,lambda=5)
probsPoisScaled<-probsPoisScaled/sum(probsPoisScaled)
nContacts<-sample(1:20,prob=probsPoisScaled,size=nrow(simDat),replace=TRUE) # number of under 5 contacts per household

simDat<-simDat %>%
  dplyr::mutate(nContacts=nContacts)

u5Dat <- data.frame(
  pid=rep(gsub(simDat$hid,pattern="PNEUMO",replacement="PU"),nContacts),
  facility=rep(simDat$facility,nContacts),
  hid=rep(simDat$hid,nContacts),
  VaccName=rep(simDat$VaccName,nContacts),
  age=sample(c(1:4), replace =TRUE, size = sum(nContacts)),
  sex=sample(c("F","M"),replace=T,size=sum(nContacts)),
  visit1_date=NA,
  visit2_date=NA,
  visit3_date=NA,
  visit4_date=NA,
  visit5_date=NA,
  visit6_date=NA,
  visit7_date=NA
)
  


for(h in unique(u5Dat$hid)){
  u5Dat$pid[u5Dat$hid==h]<-paste(sep="-",u5Dat$pid[u5Dat$hid==h],1:sum(u5Dat$hid==h))
}

u5Dat <- u5Dat %>%
  dplyr::mutate(
  height=round(ifelse(age<2 & sex == "F", rnorm(n = sum(sex == "F"), mean=80, sd=5), ifelse(age<2 & sex=="M", rnorm(n = sum(sex == "M"), mean = 82, sd=5), ifelse(age>=2 & sex=="F",rnorm(n = sum(sex == "F"), mean=93, sd=5), rnorm(n = sum(sex == "M"), mean=95, sd=5))))),
  weight=round(ifelse(age<2, rnorm(n=n(),mean=17*(height/100)^2,sd=3), rnorm(n=n(),mean=15*(height/100)^2,sd=3))),
  pcv_1=sample(c(1,0,9), replace = T, size=nrow(u5Dat)),
  pcv_2=sample(c(1,0,9), replace = T, size=nrow(u5Dat)),
  pcv_3=sample(c(1,0,9), replace = T, size=nrow(u5Dat)),
  u5carriageVisit1=rep(0,nrow(u5Dat)),
  u5carriageVisit2=rep(0,nrow(u5Dat)),
  u5carriageVisit3=rep(0,nrow(u5Dat)),
  u5carriageVisit4=rep(0,nrow(u5Dat)),
  u5carriageVisit5=rep(0,nrow(u5Dat)),
  u5carriageVisit6=rep(0,nrow(u5Dat)),
  u5carriageVisit7=rep(0,nrow(u5Dat))
)

#simulate carriage at all visits

#Visit 1

u5Dat$u5carriageVisit1[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit1[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


#Visit 2

u5Dat$u5carriageVisit2[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit2[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#Visit 3

u5Dat$u5carriageVisit3[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit3[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 4
u5Dat$u5carriageVisit4[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit4[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 5
u5Dat$u5carriageVisit5[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit5[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


#visit 6

u5Dat$u5carriageVisit6[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit6[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 7

u5Dat$u5carriageVisit7[u5Dat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

u5Dat$u5carriageVisit7[u5Dat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(u5Dat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


u5Dat <- u5Dat %>%
  dplyr::mutate(
  u5genotypeVisit1=ifelse(u5carriageVisit1==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit1==1, na.rm = T)), 0),
  u5genotypeVisit2=ifelse(u5carriageVisit2==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit2==1, na.rm = T)), 0),
  u5genotypeVisit3=ifelse(u5carriageVisit3==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit3==1, na.rm = T)), 0),
  u5genotypeVisit4=ifelse(u5carriageVisit4==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit4==1, na.rm = T)), 0),
  u5genotypeVisit5=ifelse(u5carriageVisit5==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit5==1, na.rm = T)), 0),
  u5genotypeVisit6=ifelse(u5carriageVisit6==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit6==1, na.rm = T)), 0),
  u5genotypeVisit7=ifelse(u5carriageVisit7==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(u5carriageVisit7==1, na.rm = T)), 0),
  u5shed1=ifelse(u5carriageVisit1==1, sample(c(0,1), replace = T, size = sum(u5carriageVisit1==1, na.rm = T)), 0),
  u5shed5=ifelse(u5carriageVisit5==1, sample(c(0,1), replace = T, size = sum(u5carriageVisit5==1, na.rm = T)), 0),
  u5shed7=ifelse(u5carriageVisit7==1, sample(c(0,1), replace = T, size = sum(u5carriageVisit7==1, na.rm = T)), 0)
)


#mother's data
mDat <- data.frame(
  pid=gsub(simDat$hid,pattern="PNEUMO",replacement="PM"),
  facility=simDat$facility,
  hid=simDat$hid,
  VaccName=simDat$VaccName,
  age=rnorm(n=nrow(simDat), mean = 28, sd = 2),
  ga= sample(4:32, replace = TRUE, size = nrow(simDat)),
  nContacts=simDat$nContacts,
  visit1_date=NA,
  visit2_date=NA,
  visit3_date=NA,
  visit4_date=NA,
  visit5_date=NA,
  visit6_date=NA,
  visit7_date=NA,
  mcarriageVisit1=rep(0,nrow(simDat)),
  mcarriageVisit2=rep(0,nrow(simDat)),
  mcarriageVisit3=rep(0,nrow(simDat)),
  mcarriageVisit4=rep(0,nrow(simDat)),
  mcarriageVisit5=rep(0,nrow(simDat)),
  mcarriageVisit6=rep(0,nrow(simDat)),
  mcarriageVisit7=rep(0,nrow(simDat))
)

#simulate carriage at all visits

#Visit 1

mDat$mcarriageVisit1[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit1[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


#Visit 2

mDat$mcarriageVisit2[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit2[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#Visit 3

mDat$mcarriageVisit3[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit3[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 4
mDat$mcarriageVisit4[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit4[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 5
mDat$mcarriageVisit5[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit5[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


#visit 6

mDat$mcarriageVisit6[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit6[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 7

mDat$mcarriageVisit7[mDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

mDat$mcarriageVisit7[mDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(mDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))


mDat <- mDat %>%
  dplyr::mutate(
  mgenotypeVisit1=ifelse(mcarriageVisit1==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit1==1, na.rm = T)), 0),
  mgenotypeVisit2=ifelse(mcarriageVisit2==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit2==1, na.rm = T)), 0),
  mgenotypeVisit3=ifelse(mcarriageVisit3==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit3==1, na.rm = T)), 0),
  mgenotypeVisit4=ifelse(mcarriageVisit4==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit4==1, na.rm = T)), 0),
  mgenotypeVisit5=ifelse(mcarriageVisit5==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit5==1, na.rm = T)), 0),
  mgenotypeVisit6=ifelse(mcarriageVisit6==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit6==1, na.rm = T)), 0),
  mgenotypeVisit7=ifelse(mcarriageVisit7==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(mcarriageVisit7==1, na.rm = T)), 0),
  mshed1=ifelse(mcarriageVisit1==1, sample(c(0,1), replace = T, size = sum(mcarriageVisit1==1, na.rm = T)), 0),
  mshed5=ifelse(mcarriageVisit5==1, sample(c(0,1), replace = T, size = sum(mcarriageVisit5==1, na.rm = T)), 0),
  mshed7=ifelse(mcarriageVisit7==1, sample(c(0,1), replace = T, size = sum(mcarriageVisit7==1, na.rm = T)), 0)
)



#infant data
iDat <- data.frame(
  pid=paste(sep = "", "PC",formatC(1:nrow(simDat), width = 4, format = "d", flag = "0")),
  hid=paste(sep="","PNEUMO",formatC(1:nrow(simDat), width = 4, format = "d", flag = "0")),
  mom_age=mDat$age,
  sex=sample(c("F","M"),replace=T,size=nrow(simDat)),
  visit4_date=NA,
  visit5_date=NA,
  visit6_date=NA,
  visit7_date=NA,
  carriageVisit3=rep(0,nrow(simDat)),
  carriageVisit4=rep(0,nrow(simDat)),
  carriageVisit5=rep(0,nrow(simDat)),
  carriageVisit5_C=rep(0,nrow(simDat)),
  carriageVisit6=rep(0,nrow(simDat)),
  carriageVisit7=rep(0,nrow(simDat))
  )

iDat <- iDat %>%
  dplyr::mutate(
  bheight=round(ifelse(sex == "F", rnorm(n = sum(sex == "F"), mean=64, sd=5), rnorm(n = sum(sex == "M"), mean = 67, sd=5))),
  bweight=round(rnorm(n=n(),mean=15*(bheight/100)^2,sd=1))
  )

#link the infants to the randomization list

iDat <- left_join(simDat, iDat, by="hid")

#simulate carriage at all visits
#Visit 3

iDat$carriageVisit3[iDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

iDat$carriageVisit3[iDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 4
iDat$carriageVisit4[iDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

iDat$carriageVisit4[iDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 5
iDat$carriageVisit5_C[iDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:2, size = sum(iDat$VaccName=="Pentavalent"), prob = c(0.66,0.22,0.12))

iDat$carriageVisit5_C[iDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:2, size = sum(iDat$VaccName=="PCV-13"), prob = c(0.83,0.11,0.06))

iDat$carriageVisit5 <- ifelse(iDat$carriageVisit5_C==2,1,0)


#visit 6

iDat$carriageVisit6[iDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

iDat$carriageVisit6[iDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))

#visit 7

iDat$carriageVisit7[iDat$VaccName=="Pentavalent"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="Pentavalent"), prob = c(1-0.12,0.12))

iDat$carriageVisit7[iDat$VaccName=="PCV-13"] <- sample(replace = T, x=0:1, size = sum(iDat$VaccName=="PCV-13"), prob = c(1-0.06,0.06))



iDat <- iDat %>%
  dplyr::mutate(
  genotypeVisit3=ifelse(carriageVisit3==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(carriageVisit3==1, na.rm = T)), 0),
  genotypeVisit4=ifelse(carriageVisit4==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(carriageVisit4==1, na.rm = T)), 0),
  genotypeVisit5=ifelse(carriageVisit5==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(carriageVisit5==1, na.rm = T)), 0),
  genotypeVisit6=ifelse(carriageVisit6==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(carriageVisit6==1, na.rm = T)), 0),
  genotypeVisit7=ifelse(carriageVisit7==1, sample(c("A1A1", "A1A2", "A1A3", "A1A4", "A1A5","A2A2", "A2A3", "A2A4", "A2A5","A3A3", "A3A4", "A3A5", "A4A4", "A4A5", "A5A5"), replace = T, size = sum(carriageVisit7==1, na.rm = T)), 0),
  shed5=ifelse(carriageVisit5==1, sample(c(0,1), replace = T, size = sum(carriageVisit5==1, na.rm = T)), 0),
  shed7=ifelse(carriageVisit7==1, sample(c(0,1), replace = T, size = sum(carriageVisit7==1, na.rm = T)), 0)
  )

#simulate transmission by matching genotypes

#merge iDat and u5Dat
 
 merge_data <- merge(u5Dat, iDat, by="hid")
 
#merge with mDat
 
 merge_data <- merge(merge_data, mDat, by="hid")
 
 
 
 merge_data <- merge_data %>%
   select(hid, genotypeVisit3, genotypeVisit4, genotypeVisit5, genotypeVisit6, genotypeVisit7, u5genotypeVisit1 , u5genotypeVisit2 , u5genotypeVisit3, u5genotypeVisit4, u5genotypeVisit5, u5genotypeVisit6, u5genotypeVisit7, mgenotypeVisit1 , mgenotypeVisit2 , mgenotypeVisit3, mgenotypeVisit4, mgenotypeVisit5, mgenotypeVisit6, mgenotypeVisit7)
 
 #create new variable for transmission at all visits

 merge_data <- merge_data %>%
   mutate(
     transmission1 = ifelse(mgenotypeVisit1!=0 & mgenotypeVisit1==u5genotypeVisit1,1,0),
     transmission2 = ifelse(mgenotypeVisit2!=0 & mgenotypeVisit2==u5genotypeVisit2,1,0),
     transmission3 = ifelse((genotypeVisit3!=0 & genotypeVisit3 == u5genotypeVisit3) | (mgenotypeVisit3!=0 & mgenotypeVisit3 == u5genotypeVisit3),1,0),
     transmission4 = ifelse((genotypeVisit4!=0 & genotypeVisit4 == u5genotypeVisit4) | (mgenotypeVisit4!=0 & mgenotypeVisit4 == u5genotypeVisit4),1,0),
     transmission5 = ifelse((genotypeVisit5!=0 & genotypeVisit5==u5genotypeVisit3) | (genotypeVisit5!=0 & genotypeVisit5==u5genotypeVisit4) | (genotypeVisit5!=0 & genotypeVisit5==u5genotypeVisit5), 1, 0),
      transmission5_a = ifelse((genotypeVisit5!=0 & genotypeVisit5==u5genotypeVisit5) | (mgenotypeVisit5!=0 & mgenotypeVisit5==u5genotypeVisit5), 1, 0),
     transmission6 = ifelse((genotypeVisit6!=0 & genotypeVisit6 == u5genotypeVisit6) | (mgenotypeVisit6!=0 & mgenotypeVisit6 == u5genotypeVisit6),1,0),
     transmission7 = ifelse((genotypeVisit7!=0 & genotypeVisit7==u5genotypeVisit7) | (mgenotypeVisit7!=0 & mgenotypeVisit7==u5genotypeVisit7),1,0)
          )


 #create separate transmission data for each unique hid
transmission1 <- aggregate(transmission1 ~ hid + mgenotypeVisit1, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission2 <- aggregate(transmission2 ~ hid + mgenotypeVisit2, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission3 <- aggregate(transmission3 ~ hid + genotypeVisit3, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission4 <- aggregate(transmission4 ~ hid + genotypeVisit4, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission5 <- aggregate(transmission5 ~ hid + genotypeVisit5, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission5_a <- aggregate(transmission5_a ~ hid + genotypeVisit5, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission6 <- aggregate(transmission6 ~ hid + genotypeVisit6, data = merge_data, FUN = function(x) as.integer(any(x)))
transmission7 <- aggregate(transmission7 ~ hid + genotypeVisit7, data = merge_data, FUN = function(x) as.integer(any(x)))
# 
# 
 transmission_data <- data.frame(hid=transmission4$hid, transmission1=transmission1$transmission1, transmission2=transmission2$transmission2, transmission3=transmission3$transmission3, transmission4=transmission4$transmission4,    transmission5=transmission5$transmission5, transmission5_a=transmission5_a$transmission5_a, transmission6=transmission6$transmission6, transmission7=transmission7$transmission7)
# 
 #join with iDat
 
 iDat <- left_join(iDat, transmission_data, by="hid")
 
 


```

To make sure the simulated data are sensible, we can summarise visually the key variables of intervention and outcome. Specifically, we can plot the primary outcome by vaccine arm, see @fig-simData_outcome.

```{r plotSimData}
#| label: fig-simData_outcome
#| fig-cap: "VT carriage proportion at 6 weeks by study arm for the simulated data."

#plot data
plot_pDat<-iDat %>%
  group_by(VaccName) %>%
  summarise(
    n=n(),
    k=sum(carriageVisit5),
    .groups="drop") %>%
  mutate(
    prop=k/n
  )



plot_pDat %>%
  ggplot(mapping=aes(x=VaccName,y=prop,fill=VaccName)) +
  geom_bar(stat="identity",alpha=0.9) +
  scale_fill_manual(values=c("steelblue","orange")) +
  xlab("Study arm") +
  ylab("Carriage proportion")+
  theme_light() +
  labs(title="Simulated data: VT carriage proportion at 6 weeks per vaccine arm")
```

# Statistical Analysis Plan

The R code to generate the results is embedded in this document. By default it is hidden, but can be displayed by clicking on the `Show the code` boxes on the left hand side.

## General considerations

The reporting of this study will be prepared in accordance with the CONSORT guidelines [@schulz_etal2010].

All continuous data variables will be summarized using the following descriptive statistics:

-   N (size of relevant analysis population)
-   n (size of analysis population without missing values)
-   arithmetic mean (or geometric mean if more appropriate)
-   standard deviation (SD)
-   median
-   25th percentile value (P25), 75th percentile value (P75) and interquartile range (IQR)
-   minimum and maximum (where relevant)

The proportion / percentage of observed levels will be reported for all binary and categorical measures. When appropriate, corresponding exact 95% confidence intervals (CIs) for proportions will be included.

For statistical test, a significance level of 5% will be used. All p-values will be reported to 3 decimal digits.

### Reporting conventions

P-values $\geq 0.001$ and $\leq 0.999$ will be reported to 3 decimal places; p-values less than 0.001 will be reported as "\< 0.001". The mean, standard deviation, median, IQR and other statistics will be reported to one decimal place greater than the original data. Minimum and maximum values will use the same number of decimal places as the original data. Proportions will be presented as two decimal places; values greater than zero but $<0.01$ will be presented as "\< 0.01". Percentages will be reported to 2 decimal places; values greater than zero but $<0.01\%$ will be presented as "\< 0.01%"; values greater than $99.99\%$ but less than $100\%$ will be reported as "\> 99.99%". Estimated parameters, not on the same scale as raw observations (e.g. regression coefficients) will be reported to 3 significant figures.

### Missing data

While every effort will be made to follow-up enrolled households, there may be loss-to-follow-up. For sensitivity analyses, we will, for each of the main objectives, conduct i) a complete case analysis, ii) a worst-case and iii) a best-case scenario imputation and analyse the data with these imputations.

Should the missing data be unsubstantial (5% or less of the total data), the complete case analysis will be the main analysis. Should the missing data be more substantial (i.e. exceed 5% of the total data), we will use multiple imputation for the analysis. Specifically we will use fully conditional specification (FCS) as implemented in Multiple Imputation using Chained Equations (MICE, @vanBuurenGroothuisOudshoorn2011) and the `mice` package in R, with m=10 imputations at least.

### Technical details

The R environment for statistical computing (v4.2.2 or later) will be used for all analyses.

All analysis code will be made publicly available under an MIT or GNU GPL v3.0 license on GitHub.

### Analysis population

For the primary analyses, the analysis will use the intention-to-treat (ITT) population i.e. patients' data will be analysed according to the study arm they were randomized to.

## CONSORT diagram

We will summarise the trial procedures using a standard CONSORT diagram as illustrated in @fig-consort.

```{r CONSORT}
#| label: fig-consort
#| fig-cap: "(MOCK FIGURE) CONSORT diagram for the Pneumococoon study."

include_graphics("CONSORT-updated2.png")
```

## Participant characteristics

We will list the participants' (infants and household contacts) characteristics by study arm, see @tbl-infantCharacteristics and @tbl-contactCharacteristics.

```{r infantCharacteristics}
#| label: tbl-infantCharacteristics
#| tbl-cap: "(MOCK TABLE) Infant Participant Characteristics."

tab1 <- iDat

tab1$sex <- factor(tab1$sex, levels = c("F", "M"),
                   labels = c("Female", "Male"))

labels <- list(
  variables=list(mom_age=" Mother's age",
                 bheight="Height",
                 bweight="Weight",
                 nContacts="Number of household contacts",
                 sex="Sex"),
  groups=list("", "Vaccine arm"))

strata <- c(list(Total=tab1), split(tab1, tab1$VaccName))

#need to work on decimal places for mean
my.render.cont <- function(x) {
  with(stats.apply.rounding(stats.default(x), digits=2), c("",
     "Mean (SD)"=sprintf("%s (%s)", MEAN, SD)))
}
my.render.cat <- function(x) {
  c("", sapply(stats.default(x), function(y) with(y,
      sprintf("%d (%0.1f %%)", FREQ, PCT))))
}

#caption <- "(MOCK TABLE) Infant Participant Characteristics"

table1(strata, labels, groupspan=c(1, 2), render.continuous=my.render.cont, render.categorical=my.render.cat)
```

```{r contactCharacteristics}
#| label: tbl-contactCharacteristics
#| tbl-cap: "(MOCK TABLE) Household Contacts Participant Characteristics."

tab2 <- u5Dat

tab2$sex <- factor(tab2$sex, levels = c("F", "M"),
                   labels = c("Female", "Male"))

labels <- list(
  variables=list(age=" Age (years)",
                 height="Height",
                 weight="Weight",
                 sex="Sex"),
  groups=list("", "Vaccine arm"))

strata <- c(list(Total=tab2), split(tab2, tab2$VaccName))

#need to work on decimal places for mean
my.render.cont <- function(x) {
  with(stats.apply.rounding(stats.default(x), digits=2), c("",
     "Mean (SD)"=sprintf("%s (%s)", MEAN, SD)))
}
my.render.cat <- function(x) {
  c("", sapply(stats.default(x), function(y) with(y,
      sprintf("%d (%0.1f %%)", FREQ, PCT))))
}

#caption <- "(MOCK TABLE) Household Contacts Participant Characteristics"

table1(strata, labels, groupspan=c(1, 2), render.continuous=my.render.cont, render.categorical=my.render.cat)
```

## Primary Analysis

The primary objective analysis will compare the VT carriage proportion between the PCV-13 and the pentavalent arms, using the ITT study population.

### Log-binomial regression

A generalised (binomial distribution with log link function) linear model for the binary primary endpoint (carriage or no carriage) will be fitted. This log-binomial regression model will include predictor variables for vaccine arm, sex,number of household contacts, mother's age and facility (Malaba or Mdeka or Ndirande):

$$ 
log(\pi) = log(E[Y|X_{PCV13}, X_{Male}, X_{Contacts}, X_{Mothers's  age}, X_{Mdeka}, X_{Ndirande}]) 
$$
$$
= \beta_{0} + \beta{PCV13}\cdot X_{PCV13} + \beta_{Male}\cdot X_{Male} + \beta_{Contacts}\cdot X_{Contacts} + \beta_{Mother's age}\cdot X_{Mother's age} + 
$$
$$
\beta_{Mdeka}\cdot X_{Mdeka} + \beta_{Ndirande}\cdot X_{Ndirande}
$$
where $\pi$ is the probability of being a VT carrier, $Y$ is a random variable VT carriage status, $X_{PCV13}$ is an indicator variable for PCV13 vaccination status, $X_{Male}$ is an indicator variable for whether a participant is a male or not, $X_{Contacts}$ is an indicator variable for the number of household contacts, $X_{Mother's\ age}$ is an indicator variable for the mother's age, $X_{Mdeka}$ is an indicator variable for whether a participant is from Mdeka facility or not and $X_{Ndirande}$ is an indicator variable for whether a participant is from Ndirande facility or not. $\beta_{0}$, $\beta_{PCV13}$, $\beta_{Male}$, $\beta_{Contacts}$, $\beta_{Mother's\ age}$, $\beta_{Mdeka}$ and $\beta_{Ndirande}$ are the regression coefficients that have been estimated. $Y|X_{PCV13},X_{Male},X_{Contacts},X_{Mother's\ age},X_{Mdeka}, X_{Ndirande}$ is assumed to follow a binomial distribution with parameter $\pi$.

We will test the null hypothesis $H_0$ of no effect of the PCV13 booster vaccine against the alternative hypothesis $H_1$ that it has an effect on the VT carriage probability:

$$
H_0: \beta_{PCV13}=0
$$

$$
H_1:\beta_{PCV13}\neq 0 
$$

Infants lost to follow-up or terminated from the study before the study ends will not be included in the primary analysis. By protocol, such infants will be replaced to preserve statistical power of the study.

The results from the log-binomial regression model will be summarized in tabular form, see @tbl-logbinModel.

Below we display the vaccine type and not vaccine type carriage proportions at six weeks per arm (see @fig-outcome).

```{r 6weekcarr}
#| label: fig-outcome
#| fig-cap: "(MOCK FIGURE) Summary of vaccine type carriage at 6 weeks."

iDat <- iDat %>%
  dplyr::mutate(carriageVT=ifelse(carriageVisit5_C==2,1,0),
                carriageNVT=ifelse(carriageVisit5_C==1,1,0))


dat6CarrStudyArmVisit<-iDat %>%
  dplyr::select(c(pid,VaccName,carriageVT,carriageNVT)) %>%
  tidyr::pivot_longer(cols=c(carriageVT, carriageNVT),names_to="genotype",values_to="Carriage") %>%
  dplyr::mutate(genotype=gsub(pattern="carriage",replacement="",genotype)) %>%
  dplyr::group_by(genotype,VaccName) %>%
  dplyr::summarise(
    k=sum(Carriage, na.rm = T),
    n=n(),
    prop=mean(Carriage, na.rm=T),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(dat6CarrStudyArmVisit)){
  tmp<-binom.test(x=dat6CarrStudyArmVisit$k[i],n=dat6CarrStudyArmVisit$n[i])
  dat6CarrStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  dat6CarrStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  dat6CarrStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*dat6CarrStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(dat6CarrStudyArmVisit$propCILow[i],dat6CarrStudyArmVisit$propCIUpp[i])))),"%)")
}

dat6CarrStudyArmVisit <- dat6CarrStudyArmVisit %>%
  dplyr::mutate(genotype=case_when(genotype=="NVT" ~ "Not vaccine type",
                                   genotype=="VT" ~ "Vaccine type"))

yMax<-max(c(dat6CarrStudyArmVisit$propCIUpp))

c1<-dat6CarrStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=genotype,y=prop,ymin=propCILow,ymax=propCIUpp,fill=genotype,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.006,col="grey50",fontface = "bold", size=2.5) +
  scale_fill_manual(values=c("steelblue","orange")) +
  xlab("6 weeks visit") +
  ylab("Carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

c2<-dat6CarrStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=genotype,y=prop,ymin=propCILow,ymax=propCIUpp,fill=genotype,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.006,col="grey50",fontface = "bold", size=2.5) +
  scale_fill_manual(values=c("steelblue","orange")) +
  xlab("6 weeks visit") +
  ylab("Carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(c1,c2, nrow=1)

```

We will summarise the log-binomial model fit, reporting the estimated relative risk, confidence intervals and associated p-values.

```{r logbinmodel}
#| label: tbl-logbinModel
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the log-binomial regression model
model_logbin <- logbin(carriageVisit5 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, method = "glm")

modlogbin<-summary(model_logbin)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbin)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbin)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbin)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbin)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbin)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logbin)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbin)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbin) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbin$Estimate <- exp(modlogbin$Estimate)
modlogbin$Std.err <- exp(modlogbin$Std.err)

modlogbin_sum <- cbind(modlogbin, exp(confint(model_logbin)))

# summary table
modlogbin_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

We summarize the VT carriage data at 6 weeks in @fig-Data_outcome.

```{r plotData}
#| label: fig-Data_outcome
#| fig-cap: "VT Carriage proportions at 6 weeks by study arm and site."

#plot data
plot_Dat<-iDat %>%
  group_by(facility,VaccName) %>%
  summarise(
    n=n(),
    k=sum(carriageVisit5, na.rm = T),
    .groups="drop") %>%
  mutate(
    prop=k/n
  )


for(j in 1:nrow(plot_Dat)){
  ci<-binom.test(x=plot_Dat$k[j],n=plot_Dat$n[j])$conf.int
  plot_Dat$propLow[j]<-ci[1]
  plot_Dat$propUpp[j]<-ci[2]
}

rm(ci)

g1 <-plot_Dat %>%
  filter(facility=="Malabada") %>%
  ggplot(mapping=aes(x=VaccName,y=prop,ymin=propLow,ymax=propUpp, fill=VaccName)) +
  geom_bar(stat="identity",alpha=0.9) +
  scale_fill_manual(values=c("steelblue","orange")) +
  geom_errorbar(width=0.2,col="darkgrey")+
  guides(fill="none") +
  xlab("Study arm") +
  ylab("VT carriage proportion")+
  theme_light() +
  labs(title="Malabada")

g2 <-plot_Dat %>%
  filter(facility=="Mdeka") %>%
  ggplot(mapping=aes(x=VaccName,y=prop,ymin=propLow,ymax=propUpp, fill=VaccName)) +
  geom_bar(stat="identity",alpha=0.9) +
  scale_fill_manual(values=c("steelblue","orange")) +
  geom_errorbar(width=0.2,col="darkgrey")+
  guides(fill="none") +
  xlab("Study arm") +
  ylab("VT carriage proportion")+
  theme_light() +
  labs(title="Mdeka")

g3 <-plot_Dat %>%
  filter(facility=="Ndirande") %>%
  ggplot(mapping=aes(x=VaccName,y=prop,ymin=propLow,ymax=propUpp, fill=VaccName)) +
  geom_bar(stat="identity",alpha=0.9) +
  scale_fill_manual(values=c("steelblue","orange")) +
  geom_errorbar(width=0.2,col="darkgrey")+
  guides(fill="none") +
  xlab("Study arm") +
  ylab("VT carriage proportion")+
  theme_light() +
  labs(title="Ndirande")

grid.arrange(g1,g2, g3, nrow=1)

```

#### Model diagnostics

We will check if the log-binomial regression model satisfies the assumption that the log of the outcome and the predictors are linearly related, if there are no influential observations on the fitted model and if there is no multicollinearity among the independent variables in the model.

##### Linearity

We will check that there is a linear relationship between the log of the outcome and continuous predictor variables by inspecting scatter plots of the logit values and each predictor as shown in @fig-loglinear.

```{r logDiags_linear}
#| label: fig-loglinear
#| fig-cap: "Checking Linearity assumption for the log-binomial model."

#predict the probability of event

probabilities <- predict(model_logbin, type="response")

#select numeric variables

iDat_num <- iDat %>%
  dplyr::select_if(is.numeric)

iDat_num <- iDat_num %>%
  select(nContacts, mom_age, bweight, bheight)

predictors <- colnames(iDat_num)

#Bind the logit

iDat_num <- iDat_num %>%
  dplyr::mutate(logg=log(probabilities)) %>%
  gather(key = "predictors", value = "predictor.value", -logg)

#plot data

ggplot(iDat_num, aes(logg, predictor.value))+
  geom_point(size = 0.5, alpha = 0.5) +
  geom_smooth(method = "loess") +
  theme_bw() +
  facet_wrap(~predictors, scales = "free_y")
```

##### No influential observations

We will check that there are no influential observations using the cook distance, hat values and standardized residuals as shown in @fig-loginfluence.

```{r logDiags_influence}
#| label: fig-loginfluence
#| fig-cap: "Checking influential observations for the log-binomial model."


influencePlot(model_logbin)
```

##### No multicollinearity

We will check that there there is no multicollinearity among the independent variables using the variance inflation factors (VIF). A VIF that exceeds 5 indicates a problematic amount of collinearity.

```{r logDiags_multicol}

#calculate variance inflation factor

vif(model_logbin)
```

## Secondary analyses

We will conduct secondary analyses for assessing the impact of the PCV13-cocooning intervention on:

-   VT carriage among unvaccinated 6-week-old infants using logistic regression.

-   VT carriage at each study visit.

-   Fraction of VT carriage among 6-week-old infants attributed to transmission from children 12-59 months old.

-   Frequency of within-household VT transmission events at each study visit.

-   VT carriage prevalence among mothers and children 12-59 months old at each study visit.

-   VT carriage prevalence among unvaccinated 1- and 4-week-old infants and vaccinated 5- and 9-month-old infants.

-   VT shedding prevalence among children 12-59 months old, mothers and infants at each study visit.

### Logistic regression

A generalised (binomial distribution with logit link function) linear model for the binary primary endpoint (carriage or no carriage) will be fitted. This logistic regression model will include predictor variables for vaccine arm, sex and facility (Malaba or Mdeka or Ndirande).

Infants lost to follow-up or terminated from the study before the study ends will not be included in the primary analysis. By protocol, such infants will be replaced to preserve statistical power of the study.

The results from the logistic regression model will be summarized in tabular form, see @tbl-logitModel.

```{r logitmodel}
#| label: tbl-logitModel
#| tbl-cap: "(MOCK TABLE) Summary of the logistic regression model fit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the logistic regression model
model_logistic <- glm(carriageVisit5 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, family = "binomial")

modlogistic<-summary(model_logistic)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logistic)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logistic)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logistic)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logistic)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logistic)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logistic)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logistic)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogistic) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")

modlogistic$Estimate <- exp(modlogistic$Estimate)
modlogistic$Std.err <- exp(modlogistic$Std.err)

modlogistic_sum <- cbind(modlogistic, exp(confint(model_logistic)))
# summary table
modlogistic_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`,p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Odds Ratio", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

#### Model diagnostics

We will check if the logistic regression model satisfies the assumption that the logit of the outcome and the predictors are linearly related, if there are no influential observations on the fitted model and if there is no multicollinearity among the independent variables in the model.

##### Linearity

We will check that there is a linear relationship between the logit of the outcome and continuous predictor variables by inspecting scatter plots of the logit values and each predictor as shown in @fig-logitlinear.

```{r logitDiags_linear}
#| label: fig-logitlinear
#| fig-cap: "Checking Linearity assumption for the logistic regression model."

#predict the probability of event

probabilities <- predict(model_logistic, type="response")

#select numeric variables

iDat_num <- iDat %>%
  dplyr::select_if(is.numeric)

iDat_num <- iDat_num %>%
  select(nContacts, mom_age, bweight, bheight)

predictors <- colnames(iDat_num)

#Bind the logit

iDat_num <- iDat_num %>%
  dplyr::mutate(logit=log(probabilities/(1-probabilities))) %>%
  gather(key = "predictors", value = "predictor.value", -logit)

#plot data

ggplot(iDat_num, aes(logit, predictor.value))+
  geom_point(size = 0.5, alpha = 0.5) +
  geom_smooth(method = "loess") +
  theme_bw() +
  facet_wrap(~predictors, scales = "free_y")
```

##### No influential observations

We will check that there are no influential observations using the cook distance, hat values and standardized residuals as shown in @fig-logitinfluence.

```{r logitDiags_influence}
#| label: fig-logitinfluence
#| fig-cap: "Checking influential observations for the logistic regression model."


influencePlot(model_logistic)
```

##### No multicollinearity

We will check that there there is no multicollinearity among the independent variables using the variance inflation factors (VIF). A VIF that exceeds 5 indicates a problematic amount of collinearity.

```{r logitDiags_multicol}

#calculate variance inflation factor

vif(model_logistic)

```

### Log-binomial regression at each study visit for the infants (1 week, 4 weeks, 5 months and 9 months post-birth)

We will fit a log-binomial regression model for the binary primary endpoint (carriage or no carriage) at each study visit with predictor variables for vaccine arm, sex, number of household contacts, mother's age and facility (Malaba or Mdeka or Ndirande).

The results from the log-binomial regression models will be summarized in tabular form.

```{r logbinmodel3}
#| label: tbl-logbinModel3
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 1 week visit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the log-binomial regression model
model_logbin3 <- logbin(carriageVisit3 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, method = "glm")

modlogbin3<-summary(model_logbin3)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbin3)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbin3)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbin3)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbin3)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbin3)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logbin3)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbin3)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbin3) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbin3$Estimate <- exp(modlogbin3$Estimate)
modlogbin3$Std.err <- exp(modlogbin3$Std.err)

modlogbin3_sum <- cbind(modlogbin3, exp(confint(model_logbin3)))

# summary table
modlogbin3_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

```{r logbinmodel4}
#| label: tbl-logbinModel4
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 4 weeks visit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the log-binomial regression model
model_logbin4 <- logbin(carriageVisit4 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, method = "glm")

modlogbin4<-summary(model_logbin4)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbin4)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbin4)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbin4)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbin4)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbin4)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logbin4)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbin4)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbin4) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbin4$Estimate <- exp(modlogbin4$Estimate)
modlogbin4$Std.err <- exp(modlogbin4$Std.err)

modlogbin4_sum <- cbind(modlogbin4, exp(confint(model_logbin4)))

# summary table
modlogbin4_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

```{r logbinmodel6}
#| label: tbl-logbinModel6
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 5 months visit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the log-binomial regression model
model_logbin6 <- logbin(carriageVisit6 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, method = "glm")

modlogbin6<-summary(model_logbin6)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbin6)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbin6)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbin6)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbin6)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbin6)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logbin6)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbin6)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbin6) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbin6$Estimate <- exp(modlogbin6$Estimate)
modlogbin6$Std.err <- exp(modlogbin6$Std.err)

modlogbin6_sum <- cbind(modlogbin6, exp(confint(model_logbin6)))

# summary table
modlogbin6_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

```{r logbinmodel7}
#| label: tbl-logbinModel7
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 9 months visit. The reference group are control-arm, female neonates attending Malabada facility."

# Fit the log-binomial regression model
model_logbin7 <- logbin(carriageVisit7 ~ VaccName + sex + nContacts + mom_age + facility, data = iDat, method = "glm")

modlogbin7<-summary(model_logbin7)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbin7)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbin7)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbin7)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbin7)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbin7)$coefficients)=="mom_age"~"Mother's age",
      rownames(summary(model_logbin7)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbin7)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbin7) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbin7$Estimate <- exp(modlogbin7$Estimate)
modlogbin7$Std.err <- exp(modlogbin7$Std.err)

modlogbin7_sum <- cbind(modlogbin7, exp(confint(model_logbin7)))

# summary table
modlogbin7_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

### VT carriage proportions among infants by study arm and study visit

```{r allcarr}
#| label: tbl-alloutcome
#| tbl-cap: "(MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among the infants."

datCarrStudyArmVisit<-iDat %>%
  dplyr::select(c(pid,VaccName,carriageVisit3,carriageVisit4,carriageVisit5,carriageVisit6,carriageVisit7)) %>%
  tidyr::pivot_longer(cols=c(carriageVisit3,carriageVisit4,carriageVisit5,carriageVisit6,carriageVisit7),names_to="Visit",values_to="VTcarriage") %>%
  dplyr::mutate(Visit=gsub(pattern="carriageVisit",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTcarriage),
    n=n(),
    prop=mean(VTcarriage),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datCarrStudyArmVisit)){
  tmp<-binom.test(x=datCarrStudyArmVisit$k[i],n=datCarrStudyArmVisit$n[i])
  datCarrStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datCarrStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datCarrStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datCarrStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datCarrStudyArmVisit$propCILow[i],datCarrStudyArmVisit$propCIUpp[i])))),"%)")
}

datCarrStudyArmVisit <- datCarrStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 3" ~ "1 week post-birth",
                                Visit=="Visit 4" ~ "4 weeks post-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 6" ~ "5 months post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))

datCarrStudyArmVisitKable<-datCarrStudyArmVisit %>%
  dplyr::select(Visit,VaccName,k,n,propFormatted) %>%
  tidyr::pivot_wider(id_cols = c(Visit),names_from=VaccName,values_from = c(k,n,propFormatted)) %>%
  dplyr::select(c(Visit,contains("Pentavalent"),contains("PCV-13")))


datCarrStudyArmVisitKable %>%
  knitr::kable(row.names=F,col.names=c("","n","N","proportion (95% CI)","n","N","proportion (95% CI)")) %>%
  kableExtra::kable_styling(full_width = FALSE) %>%
  kableExtra::add_header_above(c(" "=1,"Pentavalent"=3,"PCV-13"=3))

```

```{r allcarrfig}
#| label: fig-carr_outcome
#| fig-cap: "VT Carriage proportions at each study visit per study arm among the infants."
yMax<-max(c(datCarrStudyArmVisit$propCIUpp))

datCarrStudyArmVisit$Visit <- factor(datCarrStudyArmVisit$Visit, levels = c("1 week post-birth", "4 weeks post-birth", "6 weeks post-birth", "5 months post-birth", "9 months post-birth"))

i1<-datCarrStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.004,col="grey50",fontface = "bold", size=2.5) +
  scale_fill_brewer(palette="Blues") +
  #scale_x_discrete(limits=rev(levels(datCarrStudyArmVisit$Visit))) +
  xlab("Visit") +
  ylab("VT Carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

i2<-datCarrStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.004,col="grey50",fontface = "bold", size=2.5) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT Carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(i1,i2, nrow=1)
```

### Fraction of VT carriage among 6-week-old infants attributed to transmission from children 12-59 months old.

### Frequency of within-household VT transmission events at each study visit.

We will summarize the frequency of within household transmission at each visit in a tabular form, see below @tbl-infanttrans.

```{r trans}
#| label: tbl-infanttrans
#| tbl-cap: "(MOCK TABLE) Summary of the frequency of within household VT transmission at each visit."

datTransStudyArmVisit<-iDat %>%
  dplyr::select(c(pid,VaccName,transmission1, transmission2, transmission3, transmission4, transmission5,  transmission5_a, transmission6, transmission7)) %>%
  tidyr::pivot_longer(cols=c(transmission1, transmission2, transmission3, transmission4, transmission5, transmission5_a, transmission6, transmission7),names_to="Visit",values_to="Transmission") %>%
  dplyr::mutate(Visit=gsub(pattern="transmission",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(Transmission),
    n=n(),
    prop=mean(Transmission),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datTransStudyArmVisit)){
  tmp<-binom.test(x=datTransStudyArmVisit$k[i],n=datTransStudyArmVisit$n[i])
  datTransStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datTransStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datTransStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datTransStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datTransStudyArmVisit$propCILow[i],datTransStudyArmVisit$propCIUpp[i])))),"%)")
}

datTransStudyArmVisit <- datTransStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 1" ~ "<32 weeks pre-birth",
                                Visit=="Visit 2" ~ "36 weeks pre-birth",
                                Visit=="Visit 3" ~ "1 week post-birth",
                                Visit=="Visit 4" ~ "4 weeks post-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth (infants)",
                                Visit=="Visit 5_a" ~ "6 weeks post-birth",
                                Visit=="Visit 6" ~ "5 months post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))
datTransStudyArmVisitKable<-datTransStudyArmVisit %>%
  dplyr::select(Visit,VaccName,k,n,propFormatted) %>%
  tidyr::pivot_wider(id_cols = c(Visit),names_from=VaccName,values_from = c(k,n,propFormatted)) %>%
  dplyr::select(c(Visit,contains("Pentavalent"),contains("PCV-13")))



datTransStudyArmVisitKable %>%
  knitr::kable(row.names=F,col.names=c("","n","N","proportion (95% CI)","n","N","proportion (95% CI)")) %>%
  kableExtra::kable_styling(full_width = FALSE) %>%
  kableExtra::add_header_above(c(" "=1,"Pentavalent"=3,"PCV-13"=3))
```

```{r transfig}
#| label: fig-trans
#| fig-cap: "Frequency of within household VT transmission at each visit."
yMax<-max(c(datTransStudyArmVisit$propCIUpp))

datTransStudyArmVisit$Visit <- factor(datTransStudyArmVisit$Visit, levels = c("<32 weeks pre-birth", "36 weeks pre-birth", "1 week post-birth", "4 weeks post-birth", "6 weeks post-birth (infants)","6 weeks post-birth", "5 months post-birth", "9 months post-birth"))

t1<-datTransStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.0005,col="grey50",fontface = "bold", size=2.5) +
 scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("Within household transmission") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

t2<-datTransStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.0005,col="grey50",fontface = "bold", size=2.5) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("Within household transmission") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(t1,t2, nrow=1)
```

### VT carriage proportions among mothers by study arm and study visit

```{r motherscarr}
#| label: tbl-mcarr
#| tbl-cap: "(MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among mothers."

datmCarrStudyArmVisit<-mDat %>%
  dplyr::select(c(pid,VaccName,mcarriageVisit1,mcarriageVisit2,mcarriageVisit3,mcarriageVisit4,mcarriageVisit5,mcarriageVisit6,mcarriageVisit7)) %>%
  tidyr::pivot_longer(cols=c(mcarriageVisit1,mcarriageVisit2,mcarriageVisit3,mcarriageVisit4,mcarriageVisit5,mcarriageVisit6,mcarriageVisit7),names_to="Visit",values_to="VTcarriage") %>%
  dplyr::mutate(Visit=gsub(pattern="mcarriageVisit",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTcarriage),
    n=n(),
    prop=mean(VTcarriage),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datmCarrStudyArmVisit)){
  tmp<-binom.test(x=datmCarrStudyArmVisit$k[i],n=datmCarrStudyArmVisit$n[i])
  datmCarrStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datmCarrStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datmCarrStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datmCarrStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datmCarrStudyArmVisit$propCILow[i],datmCarrStudyArmVisit$propCIUpp[i])))),"%)")
}


datmCarrStudyArmVisit <- datmCarrStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 1" ~ "<32 weeks pre-birth",
                                Visit=="Visit 2" ~ "36 weeks pre-birth",
                                Visit=="Visit 3" ~ "1 week post-birth",
                                Visit=="Visit 4" ~ "4 weeks post-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 6" ~ "5 months post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))


datmCarrStudyArmVisitKable<-datmCarrStudyArmVisit %>%
  dplyr::select(Visit,VaccName,k,n,propFormatted) %>%
  tidyr::pivot_wider(id_cols = c(Visit),names_from=VaccName,values_from = c(k,n,propFormatted)) %>%
  dplyr::select(c(Visit,contains("Pentavalent"),contains("PCV-13")))



datmCarrStudyArmVisitKable %>%
  knitr::kable(row.names=F,col.names=c("","n","N","proportion (95% CI)","n","N","proportion (95% CI)")) %>%
  kableExtra::kable_styling(full_width = FALSE) %>%
  kableExtra::add_header_above(c(" "=1,"Pentavalent"=3,"PCV-13"=3))
```

```{r mcarrfig}
#| label: fig-mcarr
#| fig-cap: "VT Carriage proportions at each study visit per study arm among mothers."
yMax<-max(c(datmCarrStudyArmVisit$propCIUpp))


datmCarrStudyArmVisit$Visit <- factor(datmCarrStudyArmVisit$Visit, levels = c("<32 weeks pre-birth","36 weeks pre-birth","1 week post-birth", "4 weeks post-birth", "6 weeks post-birth", "5 months post-birth", "9 months post-birth"))


m1<-datmCarrStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

m2<-datmCarrStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(m1,m2, nrow=1)
```

### VT carriage proportions among children 12-59 months old by study arm and study visit

```{r u5carr}
#| label: tbl-u5carr
#| tbl-cap: "(MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among household contacts."

datu5CarrStudyArmVisit<-u5Dat %>%
  dplyr::select(c(pid,VaccName,u5carriageVisit1,u5carriageVisit2,u5carriageVisit3,u5carriageVisit4,u5carriageVisit5,u5carriageVisit6,u5carriageVisit7)) %>%
  tidyr::pivot_longer(cols=c(u5carriageVisit1,u5carriageVisit2,u5carriageVisit3,u5carriageVisit4,u5carriageVisit5,u5carriageVisit6,u5carriageVisit7),names_to="Visit",values_to="VTcarriage") %>%
  dplyr::mutate(Visit=gsub(pattern="u5carriageVisit",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTcarriage),
    n=n(),
    prop=mean(VTcarriage),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datu5CarrStudyArmVisit)){
  tmp<-binom.test(x=datu5CarrStudyArmVisit$k[i],n=datu5CarrStudyArmVisit$n[i])
  datu5CarrStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datu5CarrStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datu5CarrStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datu5CarrStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datu5CarrStudyArmVisit$propCILow[i],datu5CarrStudyArmVisit$propCIUpp[i])))),"%)")
}

datu5CarrStudyArmVisit <- datu5CarrStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 1" ~ "<32 weeks pre-birth",
                                Visit=="Visit 2" ~ "36 weeks pre-birth",
                                Visit=="Visit 3" ~ "1 week post-birth",
                                Visit=="Visit 4" ~ "4 weeks post-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 6" ~ "5 months post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))

datu5CarrStudyArmVisitKable<-datu5CarrStudyArmVisit %>%
  dplyr::select(Visit,VaccName,k,n,propFormatted) %>%
  tidyr::pivot_wider(id_cols = c(Visit),names_from=VaccName,values_from = c(k,n,propFormatted)) %>%
  dplyr::select(c(Visit,contains("Pentavalent"),contains("PCV-13")))



datu5CarrStudyArmVisitKable %>%
  knitr::kable(row.names=F,col.names=c("","n","N","proportion (95% CI)","n","N","proportion (95% CI)")) %>%
  kableExtra::kable_styling(full_width = FALSE) %>%
  kableExtra::add_header_above(c(" "=1,"Pentavalent"=3,"PCV-13"=3))
```

```{r u5carrfig}
#| label: fig-u5carr
#| fig-cap: "VT Carriage proportions at each study visit per study arm among household contacts."
yMax<-max(c(datu5CarrStudyArmVisit$propCIUpp))

datu5CarrStudyArmVisit$Visit <- factor(datu5CarrStudyArmVisit$Visit, levels = c("<32 weeks pre-birth","36 weeks pre-birth","1 week post-birth", "4 weeks post-birth", "6 weeks post-birth", "5 months post-birth", "9 months post-birth"))


u1<-datu5CarrStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

u2<-datu5CarrStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(u1,u2, nrow=1)
```

### Log-binomial regression for VT carriage for the mothers and household contacts

We will fit log-binomial regression models for the binary primary endpoint (carriage or no carriage) at \<32 weeks pre-birth and 1 week post-birth visits with predictor variables for vaccine arm, age, gestational age, number of household contacts and facility (Malaba or Mdeka or Ndirande) among mothers.

```{r logbinmom32}
#| label: tbl-logbinmom32
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at <32 weeks pre-birth visit for mothers. The reference group are control-arm mothers, attending Malabada facility."

# Fit the log-binomial regression model
model_logbinm32 <- logbin(mcarriageVisit1 ~ VaccName + age + ga + nContacts + facility, data = mDat, method = "glm")

modlogbinm32<-summary(model_logbinm32)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbinm32)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbinm32)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbinm32)$coefficients)=="age"~"Mother's age",
      rownames(summary(model_logbinm32)$coefficients)=="ga"~"Gestational age",
      rownames(summary(model_logbinm32)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbinm32)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbinm32)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbinm32) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbinm32$Estimate <- exp(modlogbinm32$Estimate)
modlogbinm32$Std.err <- exp(modlogbinm32$Std.err)

modlogbinm32_sum <- cbind(modlogbinm32, exp(confint(model_logbinm32)))

# summary table
modlogbinm32_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

```{r logbinmom1}
#| label: tbl-logbinmom1
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 1 week post-birth visit for mothers. The reference group are control-arm mothers, attending Malabada facility."

# Fit the log-binomial regression model
model_logbinm1 <- logbin(mcarriageVisit3 ~ VaccName + age + ga + nContacts + facility, data = mDat, method = "glm")

modlogbinm1<-summary(model_logbinm1)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbinm1)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbinm1)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbinm1)$coefficients)=="age"~"Mother's age",
      rownames(summary(model_logbinm1)$coefficients)=="ga"~"Gestational age",
      rownames(summary(model_logbinm1)$coefficients)=="nContacts"~"Number of household contacts",
      rownames(summary(model_logbinm1)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbinm1)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbinm1) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbinm1$Estimate <- exp(modlogbinm1$Estimate)
modlogbinm1$Std.err <- exp(modlogbinm1$Std.err)

modlogbinm1_sum <- cbind(modlogbinm1, exp(confint(model_logbinm1)))

# summary table
modlogbinm1_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

We will fit log-binomial regression models for the binary primary endpoint (carriage or no carriage) at \<32 weeks pre-birth and 1 week post-birth visits with predictor variables for vaccine arm, age, sex and facility (Malaba or Mdeka or Ndirande) among household contacts.

```{r logbinu32}
#| label: tbl-logbinu32
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at <32 weeks pre-birth visit for household contacts. The reference group are control-arm, female household contacts attending Malabada facility."

# Fit the log-binomial regression model
model_logbinu32 <- logbin(u5carriageVisit1 ~ VaccName + age + sex + facility, data = u5Dat, method = "glm")

modlogbinu32<-summary(model_logbinu32)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbinu32)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbinu32)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbinu32)$coefficients)=="age"~"Mother's age",
      rownames(summary(model_logbinu32)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbinu32)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbinu32)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbinu32) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbinu32$Estimate <- exp(modlogbinu32$Estimate)
modlogbinu32$Std.err <- exp(modlogbinu32$Std.err)

modlogbinu32_sum <- cbind(modlogbinu32, exp(confint(model_logbinu32)))

# summary table
modlogbinu32_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

```{r logbinu1}
#| label: tbl-logbinu1
#| tbl-cap: "(MOCK TABLE) Summary of the log-binomial regression model fit at 1 week post-birth visit for household contacts. The reference group are control-arm, female household contacts attending Malabada facility."

# Fit the log-binomial regression model
model_logbinu1 <- logbin(u5carriageVisit3 ~ VaccName + age + sex + facility, data = u5Dat, method = "glm")

modlogbinu1<-summary(model_logbinu1)$coefficients %>%
  as.data.frame() %>%
  mutate(
    parameter=case_when(
      rownames(summary(model_logbinu1)$coefficients)=="(Intercept)"~"(Intercept)",
      rownames(summary(model_logbinu1)$coefficients)=="VaccNamePCV-13"~"PCV-13 vaccine",
      rownames(summary(model_logbinu1)$coefficients)=="age"~"Mother's age",
      rownames(summary(model_logbinu1)$coefficients)=="sexM"~"Sex: Male",
      rownames(summary(model_logbinu1)$coefficients)=="facilityMdeka"~"Facility: Mdeka",
      rownames(summary(model_logbinu1)$coefficients)=="facilityNdirande"~"Facility: Ndirande"
      )
  )

colnames(modlogbinu1) <- c("Estimate", "Std.err", "z.value", "p.value", "parameter")


modlogbinu1$Estimate <- exp(modlogbinu1$Estimate)
modlogbinu1$Std.err <- exp(modlogbinu1$Std.err)

modlogbinu1_sum <- cbind(modlogbinu1, exp(confint(model_logbinu1)))

# summary table
modlogbinu1_sum %>%
  dplyr::select(parameter, Estimate,`2.5 %`, `97.5 %`, p.value) %>%
  mutate_at(vars(Estimate, `2.5 %`, `97.5 %`), ~ format(round(., 3), nsmall = 3)) %>%
  mutate(p.value = ifelse(parameter != "(Intercept)" & p.value < 0.05,
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = T),
                          cell_spec(format(nsmall = 3, round(digits = 3, p.value)), bold = F))) %>%
  kbl(row.names = FALSE, col.names = c("", "Relative Risk", "2.5%", "97.5%", "p-value"),
        escape = FALSE) %>%
  kable_styling(full_width = FALSE)
```

### VT shedding prevalence among children 12-59 months old, mothers and infants at each study visit.

```{r u5shedfig}
#| label: fig-u5shed
#| fig-cap: "VT shedding prevalence at each study visit per study arm among household contacts."

datu5shedStudyArmVisit<-u5Dat %>%
  dplyr::select(c(pid,VaccName,u5shed1,u5shed5,u5shed7)) %>%
  tidyr::pivot_longer(cols=c(u5shed1,u5shed5,u5shed7),names_to="Visit",values_to="VTshed") %>%
  dplyr::mutate(Visit=gsub(pattern="u5shed",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTshed),
    n=n(),
    prop=mean(VTshed),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datu5shedStudyArmVisit)){
  tmp<-binom.test(x=datu5shedStudyArmVisit$k[i],n=datu5shedStudyArmVisit$n[i])
  datu5shedStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datu5shedStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datu5shedStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datu5shedStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datu5shedStudyArmVisit$propCILow[i],datu5shedStudyArmVisit$propCIUpp[i])))),"%)")
}

datu5shedStudyArmVisit <- datu5shedStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 1" ~ "<32 weeks pre-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))

yMax<-max(c(datu5shedStudyArmVisit$propCIUpp))

datu5shedStudyArmVisit$Visit <- factor(datu5shedStudyArmVisit$Visit, levels = c("<32 weeks pre-birth","6 weeks post-birth", "9 months post-birth"))


u1<-datu5shedStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

u2<-datu5shedStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(u1,u2, nrow=1)
```

```{r mshedfig}
#| label: fig-mshed
#| fig-cap: "VT shedding prevalence at each study visit per study arm among mothers."

datmshedStudyArmVisit<-mDat %>%
  dplyr::select(c(pid,VaccName,mshed1,mshed5,mshed7)) %>%
  tidyr::pivot_longer(cols=c(mshed1,mshed5,mshed7),names_to="Visit",values_to="VTshed") %>%
  dplyr::mutate(Visit=gsub(pattern="mshed",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTshed),
    n=n(),
    prop=mean(VTshed),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datmshedStudyArmVisit)){
  tmp<-binom.test(x=datmshedStudyArmVisit$k[i],n=datmshedStudyArmVisit$n[i])
  datmshedStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datmshedStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datmshedStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datmshedStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datmshedStudyArmVisit$propCILow[i],datmshedStudyArmVisit$propCIUpp[i])))),"%)")
}

datmshedStudyArmVisit <- datmshedStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 1" ~ "<32 weeks pre-birth",
                                Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))

yMax<-max(c(datmshedStudyArmVisit$propCIUpp))

datmshedStudyArmVisit$Visit <- factor(datmshedStudyArmVisit$Visit, levels = c("<32 weeks pre-birth","6 weeks post-birth", "9 months post-birth"))


m1<-datmshedStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

m2<-datmshedStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(m1,m2, nrow=1)
```
```{r shedfig}
#| label: fig-shed
#| fig-cap: "VT shedding prevalence at each study visit per study arm among infants."

datshedStudyArmVisit<-iDat %>%
  dplyr::select(c(pid,VaccName,shed5,shed7)) %>%
  tidyr::pivot_longer(cols=c(shed5,shed7),names_to="Visit",values_to="VTshed") %>%
  dplyr::mutate(Visit=gsub(pattern="shed",replacement="Visit ",Visit)) %>%
  dplyr::group_by(Visit,VaccName) %>%
  dplyr::summarise(
    k=sum(VTshed),
    n=n(),
    prop=mean(VTshed),
    .groups="drop"
  ) %>%
  dplyr::mutate(
    propCILow=NA,
    propCIUpp=NA,
    propFormatted=NA
  )

for(i in 1:nrow(datshedStudyArmVisit)){
  tmp<-binom.test(x=datshedStudyArmVisit$k[i],n=datshedStudyArmVisit$n[i])
  datshedStudyArmVisit$propCILow[i]<-tmp$conf.int[1]
  datshedStudyArmVisit$propCIUpp[i]<-tmp$conf.int[2]
  datshedStudyArmVisit$propFormatted[i]<-paste(sep="",format(nsmall=1,round(digits=1,100*datshedStudyArmVisit$prop[i])),"% (",paste(collapse="%, ",format(nsmall=1,round(digits=1,100*c(datshedStudyArmVisit$propCILow[i],datshedStudyArmVisit$propCIUpp[i])))),"%)")
}

datshedStudyArmVisit <- datshedStudyArmVisit %>%
  dplyr::mutate(Visit=case_when(Visit=="Visit 5" ~ "6 weeks post-birth",
                                Visit=="Visit 7" ~ "9 months post-birth"))

yMax<-max(c(datshedStudyArmVisit$propCIUpp))

datshedStudyArmVisit$Visit <- factor(datshedStudyArmVisit$Visit, levels = c("6 weeks post-birth", "9 months post-birth"))


i1<-datshedStudyArmVisit %>%
  filter(VaccName=="Pentavalent") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="Blues") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="Pentavalent") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

i2<-datshedStudyArmVisit %>%
  filter(VaccName=="PCV-13") %>%
  ggplot(mapping=aes(x=Visit,y=prop,ymin=propCILow,ymax=propCIUpp,fill=Visit,label=paste(sep=" / ",k,n))) +
  geom_bar(stat="identity",alpha=0.9) +
  geom_errorbar(width=0.2,col="grey") +
  geom_text(y=-0.002,col="grey50",fontface = "bold", size=2) +
  scale_fill_brewer(palette="YlOrBr") +
  xlab("Visit") +
  ylab("VT carriage proportion") +
  guides(fill="none") +
  theme_light() +
  labs(title="PCV-13") +
  ylim(c(0,yMax)) +
  theme(axis.text.x = element_text(angle = 45, hjust=1),text=element_text(size=16))

grid.arrange(i1,i2, nrow=1)
```

# List of figures

@fig-simData_outcome: VT carriage proportion at 6 weeks by study arm for the simulated data.

@fig-consort: (MOCK FIGURE) CONSORT diagram for the Pneumococoon study.

@fig-outcome: (MOCK FIGURE) Summary of vaccine type carriage at 6 weeks.

@fig-Data_outcome: Carriage proportions by study arm and site.

@fig-loglinear: Checking Linearity assumption for the log-binomial model.

@fig-loginfluence: Checking influential observations for the log-binomial model.

@fig-logitlinear: Checking Linearity assumption for the logistic regression model.

@fig-logitinfluence: Checking influential observations for the logistic regression model.

@fig-carr_outcome: VT Carriage proportions at each study visit per study arm among the infants.

@fig-trans: Frequency of within household VT transmission at each visit.

@fig-mcarr: VT Carriage proportions at each study visit per study arm among mothers.

@fig-u5carr: VT Carriage proportions at each study visit per study arm among household contacts.

@fig-u5shed: VT shedding prevalence at each study visit per study arm among household contacts.

@fig-mshed: VT shedding prevalence at each study visit per study arm among mothers.

@fig-shed: VT shedding prevalence at each study visit per study arm among infants.

# List of tables

@tbl-versionHistory: Version history listing major changes for each new version.

@tbl-abbr: List of abbreviations

@tbl-infantCharacteristics: (MOCK TABLE) Infant Participant Characteristics.

@tbl-contactCharacteristics: (MOCK TABLE) Household Contacts Participant Characteristics.

@tbl-logbinModel: (MOCK TABLE) Summary of the log-binomial regression model fit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-logitModel: (MOCK TABLE) Summary of the logistic regression model fit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-logbinModel3: (MOCK TABLE) Summary of the log-binomial regression model fit at 1 week visit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-logbinModel4: (MOCK TABLE) Summary of the log-binomial regression model fit at 4 weeks visit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-logbinModel6: (MOCK TABLE) Summary of the log-binomial regression model fit at 5 months visit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-logbinModel7: (MOCK TABLE) Summary of the log-binomial regression model fit at 9 months visit. The reference group are control-arm, female neonates attending Malabada facility.

@tbl-alloutcome: (MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among the infants.

@tbl-infanttrans: (MOCK TABLE) Summary of the frequency of within household VT transmission at each visit.

@tbl-mcarr: (MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among mothers.

@tbl-u5carr: (MOCK TABLE) Summary of vaccine type carriage proportions at each study visit per study arm among household contacts.

@tbl-logbinmom32: (MOCK TABLE) Summary of the log-binomial regression model fit at \<32 weeks pre-birth visit for mothers. The reference group are control-arm mothers, attending Malabada facility.

@tbl-logbinmom1: (MOCK TABLE) Summary of the log-binomial regression model fit at 1 week post-birth visit for mothers. The reference group are control-arm mothers, female neonates attending Malabada facility.

@tbl-logbinu32: (MOCK TABLE) Summary of the log-binomial regression model fit at \<32 weeks pre-birth visit for household contacts. The reference group are control-arm, female household contacts attending Malabada facility.

@tbl-logbinu1: (MOCK TABLE) Summary of the log-binomial regression model fit at 1 week post-birth visit for household contacts. The reference group are control-arm, female household contacts attending Malabada facility.

# References

# Runtime information

```{r}
sessionInfo()
```
